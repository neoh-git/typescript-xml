import { XmlAttributeType } from '../enums/attribute_type.js';
import { XmlEntityMapping } from './entity_mapping.js';

/**
 * Entity mapping that skips all entity conversion, both on decoding and
 * encoding input.
 *
 * This entity encoding is unlikely to be useful, unless you exactly know what
 * you are doing. Output generated by this mapping is unlikely to produce valid
 * XML and might not be readable again.
 */
export class XmlNullEntityMapping extends XmlEntityMapping {
    /**
     * @inheritdoc
     */
    public override decode(input: string): string {
        return input;
    }

    /**
     * @inheritdoc
     */
    public decodeEntity(input: string): string | undefined {
        // `input` is unused.
        input;
        return undefined;
    }

    /**
     * @inheritdoc
     */
    public encodeText(input: string): string {
        return input;
    }

    /**
     * @inheritdoc
     */
    public encodeAttributeValue(
        input: string,
        // `type` is unused.
        type: XmlAttributeType
    ): string {
        type;
        return input;
    }
}
